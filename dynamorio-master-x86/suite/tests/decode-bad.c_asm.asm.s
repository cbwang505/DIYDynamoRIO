



































































































































































































































































































































































































































































































































   

























































  



  





















   




  



































































































































































































































































































































































































































































































































































































































































































































































































.686 
.XMM 
.MODEL flat, c 
ASSUME fs:_DATA 
.CODE


        test_priv_0 PROC

        mov  eax, dr0
        ret
        test_priv_0 ENDP


        test_priv_1 PROC

        mov  dr7, eax
        ret
        test_priv_1 ENDP


        test_priv_2 PROC

        mov  eax, cr0
        ret
        test_priv_2 ENDP


        test_priv_3 PROC

        mov  cr3, eax
        ret
        test_priv_3 ENDP



        test_prefix_0 PROC





        DB 065h 
 DB 0f2h 
 DB 0f3h 
 DB 0ebh 
 DB 000h 


        ret
        test_prefix_0 ENDP



       


        test_prefix_1 PROC

        push ebx 
 
 push ebp 
 
 push esi 
 
 push edi 

        
        mov  eax, 1
        mov  ebx, 2
        mov  ecx, 3
        mov  edx, 4
        mov  edi, 5
        mov  esi, 6
        mov  ebp, 7
        DB 0f0h 
 DB 0ebh 
 DB 000h 

        add      esp, 0 
        pop edi 
 pop esi 
 pop ebp 
 pop ebx
        ret
        test_prefix_1 ENDP



        test_inval_0 PROC

        DB 0dfh 
 DB 0fah 

        ret
        test_inval_0 ENDP


        test_inval_1 PROC

        DB 00fh 
 DB 004h 

        ret
        test_inval_1 ENDP


        test_inval_2 PROC

        DB 0feh 
 DB 030h 

        ret
        test_inval_2 ENDP


        test_inval_3 PROC

        DB 0ffh 
 DB 038h 

        ret
        test_inval_3 ENDP


        test_inval_4 PROC

        DB 0f3h 
 DB 00fh 
 DB 013h 

        ret
        test_inval_4 ENDP


        test_inval_5 PROC

        
        
        DB 00fh 
 DB 00bh 

        DB 020h 
 DB 00fh 




        DB 0ffh 
 DB 0ffh 

        DB 0ffh 
 DB 0d9h 

        ret
        test_inval_5 ENDP


        test_inval_6 PROC

        




        
        DB 0ffh 
 DB 0d9h 

        ret
        test_inval_6 ENDP


        test_inval_7 PROC

         


        DB 066h 
 DB 0ffh 
 DB 0d9h 

        ret
        test_inval_7 ENDP

END


